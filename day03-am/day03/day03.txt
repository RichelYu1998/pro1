一、运算规则（5条）
	--1、计算结果的数据类型，与最大类型一致
		--测试
			System.out.println( 3/2 );  // 1，int/int结果和最大值类型还是int
			System.out.println( 3D/2 ); //1.5 , double/int结果和最大值类型double一致
	--2、byte,short,char三种比int小的整数，运算时会先自动转换成int
		--测试
			byte a = 10 ;
			byte b = 20 ;
			//右侧，是byte+byte会自动变成int类型，变成了大类型，给左侧的小类型，赋值--不可！！需要强转
			byte c = (byte) (a+b) ;
	--3、整数运算溢出
		--测试
			//整数运算溢出现象：是因为整数运算时已经超出了int的取值范围，到最大值后会回到最小值重头开始运算
			//解决方案--就是添加后缀L，把int类型转成long类型。
			System.out.println( 30000000L*60*60*24*365   ) ; //1783906304

二、运算符
	--1、算数运算符
		--包括： +-*/  %  ++ --
	--2、比较运算符：结果是boolean类型
		--包括： ==   !=
	--3、逻辑运算符：结果是boolean类型
		--包括： & | && ||  +  !
	--4、三元运算符：结果是2或者3
		--格式：  1  ?  2 :  3
	--5、赋值运算符
		--包括： =  +=  -= *=  /=
三、逻辑运算符
	单与 &  ：表示并且关系
		1 & 2 ，如果结果想要得到true，要求是：1和2都是true

	单或 |  ：表示或者关系
		1 | 2 ，如果结果想要得到true，要求是：1是true或者2是true

	双与 / 短路与  -- && ：表示并且关系，高效
		1 && 2 ，如果1判断不成立得到了false(结果已经注定了就是false)，2会被短路，提高效率。
		
	双或 / 短路或  -- || ：表示或者关系，高效
		1 || 2 ，如果1判断成立得到了true(结果已经注定了就是true)，2会被短路，提高效率。

四、运算符的练习
	--1、练习1：自增自减
		package cn.tedu.basic;

		//这个类用来测试  自增++   自减--
		public class Test2_Zizeng {
			public static void main(String[] args) {
				int a = 1 ;
				//符号在后，先使用后变化
				System.out.println(a++);//1
				
				int b = 1 ;
				//符号在前，先变化再使用
				System.out.println(++b);//2
				
				System.out.println(++a+b+a++);//3+2+3=8
				
				int c = 1;
				//符号在后，先使用后变化
				System.out.println(c--);//1
				
				int d = 1;
				//符号在前，先变化再使用
				System.out.println(--d);//0
				
				System.out.println(--c-c-d--);//-1-(-1)-0  =0
				
			}
		}

	--2、练习2：求两个数里的大值 
	--3、练习3：平年闰年  

