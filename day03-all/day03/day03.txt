一、运算规则（5条）
	--1、计算结果的数据类型，与最大类型一致
		--测试
			System.out.println( 3/2 );  // 1，int/int结果和最大值类型还是int
			System.out.println( 3D/2 ); //1.5 , double/int结果和最大值类型double一致
	--2、byte,short,char三种比int小的整数，运算时会先自动转换成int
		--测试
			byte a = 10 ;
			byte b = 20 ;
			//右侧，是byte+byte会自动变成int类型，变成了大类型，给左侧的小类型，赋值--不可！！需要强转
			byte c = (byte) (a+b) ;
	--3、整数运算溢出
		--测试
			//整数运算溢出现象：是因为整数运算时已经超出了int的取值范围，到最大值后会回到最小值重头开始运算
			//解决方案--就是添加后缀L，把int类型转成long类型。
			System.out.println( 30000000L*60*60*24*365   ) ; //1783906304

二、运算符
	--1、算数运算符
		--包括： +-*/  %  ++ --
	--2、比较运算符：结果是boolean类型
		--包括： ==   !=
	--3、逻辑运算符：结果是boolean类型
		--包括： & | && ||  +  !
	--4、三元运算符：结果是2或者3
		--格式：  1  ?  2 :  3
	--5、赋值运算符
		--包括： =  +=  -= *=  /=
三、逻辑运算符
	单与 &  ：表示并且关系
		1 & 2 ，如果结果想要得到true，要求是：1和2都是true

	单或 |  ：表示或者关系
		1 | 2 ，如果结果想要得到true，要求是：1是true或者2是true

	双与 / 短路与  -- && ：表示并且关系，高效
		1 && 2 ，如果1判断不成立得到了false(结果已经注定了就是false)，2会被短路，提高效率。
		
	双或 / 短路或  -- || ：表示或者关系，高效
		1 || 2 ，如果1判断成立得到了true(结果已经注定了就是true)，2会被短路，提高效率。

四、运算符的练习
	--1、练习1：自增自减
		package cn.tedu.basic;

		//这个类用来测试  自增++   自减--
		//总结
		//1、口诀：符号在前，先变化再使用    符号在后，先使用后变化 
		//2、顺序： ++  --  的优先级要比+ - 高
		public class Test2_Zizeng {
			public static void main(String[] args) {
				int a = 1 ;
				//符号在后，先使用后变化
				System.out.println(a++);//1
				int b = 1 ;
				//符号在前，先变化再使用
				System.out.println(++b);//2
		//		System.out.println(++a+b+a++);//3+2+3=8
				System.out.println(a+++a); // 相当于执行了a++再加a，=2+3=5 
				
				int c = 1;
				//符号在后，先使用后变化
				System.out.println(c--);//1
				int d = 1;
				//符号在前，先变化再使用
				System.out.println(--d);//0
				System.out.println(--c-c-d--);//-1-(-1)-0  =0
			}
		}


	--2、练习2：求两个数里的大值 
		package cn.tedu.basic;

		import java.util.Scanner;

		//这个类用来测试 最大值
		//1、三元运算符的使用  ，重点是语法：  1  ?  2 ： 3
		public class Test3_Max {
			public static void main(String[] args) {
				//1、定义变量  TODO  动态接收键盘输入的值再测试
				int a = new Scanner(System.in).nextInt() ;
				int b = new Scanner(System.in).nextInt()  ;
				
				//2、开始比  两个数  里的  大值   -- 三元运算符 --  1  ?  2  :  3
				//最终max记录的到底是a还是b呢？--不确定，要看a<b成立吗？
				//如果成立a就交给max记录，否则b交给max记录
				int max =  a  >  b   ?  a  :  b ; 
				System.out.println("a b里的大值是："+max);
				
				//3、三个数里的大值
				int c = new Scanner(System.in).nextInt()  ;
				//最终result记录的到底是max还是c呢？--不确定，要看max > c成立吗？
				//如果成立max就交给result记录，否则c交给result记录
				int result = max > c  ?  max  :  c   ;
				System.out.println("a b c 里的大值是："+result);
			}
		}


	
	--3、练习3：平年闰年  
		package cn.tedu.basic;

		import java.util.Scanner;

		//这个类用来测试   平年闰年
			//1、能被4整除，并且不能被100整除
			//2、能被400整除
		public class Test4_Runnian {
			public static void main(String[] args) {
				//1、接收用户输入的年号 --整数
				int year = new Scanner(System.in).nextInt() ;
				
				//2、判断，到底是不是闰年
				//if(  判断条件  ){ 满足条件的代码   }
				//if(  大条件1  ||   大条件2  ){ 满足条件的代码   }
				//if(  小条件1 &&  小条件2   ||   能被400整除  ){ 满足条件的代码   }
				//if(  能被4整除 &&  不能被100整除   ||   能被400整除  ){ 满足条件的代码   }
				String desc  =  "平年" ; //默认每年都是平年
				if(  ( year % 4 ==  0  &&  year % 100  != 0 )  ||  year % 400 == 0   ){ 
		//			满足条件的代码   -- 修改desc的值，变成闰年
					desc = "闰年" ; 
				}
				System.out.println(year+"年是"+desc); //TODO 自己提取动态数据 拼接字符串
			}
		}

[重点！！]五、分支结构1：if
	--1、语法
		单分支：
		if( 判断条件 ){ 
			满足条件的代码 
		}
		多分支：
		if( 判断条件 ){ 
			满足条件的代码 
		}else{
			不满足条件的代码
		}
		嵌套分支：
		if( 判断条件1 ){ 
			满足条件的代码1 
		}else if( 判断条件2 ){ 
			满足条件的代码2 
		}else if( 判断条件3 ){ 
			满足条件的代码3 
		}else{
			谁都不满足的代码
		}




	--2、练习1：商品打折
		--需求：接收用户输入的原价。满1000打9折。满2000打8折。满5000打5折。
		--测试
		package cn.tedu.ifdemo;

		import java.util.Scanner;

		//这个类用来测试 商品打折
		public class Test5_Discount {
			public static void main(String[] args) {
				//1，接收用户输入的原价
				double price = new Scanner(System.in).nextDouble() ;
				
				//2、计算折后价，并打印
				double dis = price ; //定义变量，记录折后价
				if( price >= 5000 ) {//满5000打5折
					dis = price*0.5  ; 
				}else if( price >= 2000 ) {//满2000打8折
					dis = price*0.8  ; 
				}else if( price >= 1000 ) {//满1000打9折
					dis = price*0.9  ; 
				}
				
				System.out.println("原价是：" + price + "，折后价是："+dis);
				
			}
		}

		
	--3、练习2：统计学员得分
		--需求：90分以上 优秀   80~89 良好  70~79 中等  60~69 及格  60分以下 不及格
		--测试
		package cn.tedu.ifdemo;

		import java.util.Scanner;

		//这个类用来测试  学员得分
		public class Test6_Score {
			public static void main(String[] args) {
				//1、接收用户输入的分数
				int score = new Scanner(System.in).nextInt() ;
				
				//3、为了增强程序的健壮性，我们必须限制用户输入的数值
				if(   score <0  ||  score>100    ) {
					System.out.println("请您输入100以内的正整数！");
					
					return ; //让程序结束！！
				}
				
				//2、判断
				if(  score >= 90 ) {//90分以上 优秀  
					 System.out.println("优秀");
				}else if(  score>=80 &&  score<=89  ) {//80~89 良好  
					System.out.println("良好");
				}else if(  score>=70 &&  score<=79  ) { //		70~79 中等  
					System.out.println("中等");
				}else if(  score>=60 &&  score<=69  ) { //		60~69 及格   
					System.out.println("及格 ");
				}else if(  score<60  ) { //		60分以下 不及格
					System.out.println("不及格 ");
				}
				
			}
		}


[了解]六、分支结构2：switch
	--1、语法
		switch(判断条件){
			case 1 ： sout(123);
			case 2 ： sout(456);
			case 3 ： sout(456);
			case 4 ： sout(456);
			default : sout(0);
		}
	--2、数字匹配
		package cn.tedu.ifdemo;

		//这个类用来测试  数字匹配
		//简单了解即可！！
		public class Test7_Switch {
			public static void main(String[] args) {
				int a = 2 ;
				//1、参数a相当于把数字2传递成功
				switch ( a  )  {//0、整型表达式对于数据类型有要求：byte short int char jdk1.7后String
					//2、开始匹配各种情况
					case '0' : System.out.println(0); break ;
					case 1 :System.out.println(1); break ;
					//3、成功匹配了数字2的情况，并向后穿透所有case，包括default
					case 2: System.out.println(2);  break ;  //4、break用来结束程序
					case 3: System.out.println(3); break ;
					case 4: System.out.println(4); break ;
					
					default : System.out.println(99);
				}
				
			}
		}

七、循环结构1：for
	--1、语法
		for(循环的开始位置 ; 循环的判断条件 ; 更改条件 ){
			循环体
		}
	--2、练习1：打印0到10
		package cn.tedu.fordemo;

		//这个类用来测试 for循环
		//for(开始位置;循环条件;更改条件){循环体}
		public class Test8_For {
			public static void main(String[] args) {
		//		练习1：打印0到10
				// int i = 0	是指循环的开始位置，从0开始。i代表着每次获取到的数据
				// i <= 10		是指i的取值范围，最大是10
				// i++			是指数据的变化规律，这个题目数据是一个自增过程，如：012345678910
				for( int i = 0 ; i <= 10 ; i++){
					System.out.println( i );//循环体，要重复做的事情。打印每次获取到的值
				}
				
				
				
				
			}
		}

	--3、练习2：打印10到0
	--4、练习3：打印8,88,888,8888

[作业]完成for循环的练习2、练习3  。并画图流程图！！！
[作业]把今天的8个类文件，每个敲3遍
[总结]java的基本语法


		